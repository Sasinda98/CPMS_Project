package com.construction.app.cpms;

import android.os.Bundle;
import android.support.annotation.NonNull;
import android.support.design.widget.BottomNavigationView;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentTransaction;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.CardView;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.Button;
import android.widget.TextView;

import com.construction.app.cpms.R;
import com.construction.app.cpms.miscellaneous.DashboardFragment;
import com.construction.app.cpms.miscellaneous.ForumsFragment;
import com.construction.app.cpms.miscellaneous.MessagesFragment;
import com.construction.app.cpms.miscellaneous.NotificationsFragment;
import com.construction.app.cpms.userManagement.loginFragment;

public class SecondaryActivity extends AppCompatActivity implements Navigation{

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_secondary);

      //  goToFragment(new DashboardFragment());

        if(savedInstanceState == null){ //Checking for savedinstances, to prevent creation of more than one fragment.
            DashboardFragment dashboardFragment= new DashboardFragment();  //instantiation of login fragment.
            getSupportFragmentManager().beginTransaction().add(R.id.secondaryContainer, dashboardFragment).commit(); //adding loginFragment to container


            BottomNavigationView navigation = (BottomNavigationView) findViewById(R.id.navigation);
            navigation.setOnNavigationItemSelectedListener(mOnNavigationItemSelectedListener);

            //making sure selection is highlighted in the bottom bar. navigation
            navigation.getMenu().findItem(R.id.navigation_dashboard).setChecked(true);

        }
    }




   /* @Override   //Disable back button (to go back to sign in page) once you are signed in.
    public void onBackPressed() {
        moveTaskToBack(false);
    }*/

    /*method template autogenerated from android studio..*/
    private BottomNavigationView.OnNavigationItemSelectedListener mOnNavigationItemSelectedListener = new BottomNavigationView.OnNavigationItemSelectedListener() {

        Fragment fragment;  //stores fragment to be navigated to

        @Override   //everytime you tap the bottom nav bar, this method gets called, item contains info about what item got pressed.
        public boolean onNavigationItemSelected(@NonNull MenuItem item) {
            switch (item.getItemId()) {                 //Setting the fragment object to correct fragment according to user input using a switch..
                case R.id.navigation_dashboard:         //code to execute when dashboard is clicked.
                     fragment = new DashboardFragment();

                    break;
                case R.id.navigation_message:           //code to execute when messages is clicked.
                    fragment = new MessagesFragment();
                    break;
                case R.id.navigation_notifications:     //code to execute when notifications is clicked.
                   // fragment = new NotificationsFragment();
                    fragment = new ForumsFragment();
                    break;
            }
            Boolean result = goToFragment(fragment);
            return result;
        }
    };

    //Helper method for loading fragments from bottom navbar...
    private boolean goToFragment(Fragment fragment){
        //if fragment is null do not switch else, switch,....
        if(fragment!=null){
            //replace the framelayout "secondaryContainer" with the given fragment parameter.
            getSupportFragmentManager().beginTransaction().replace(R.id.secondaryContainer, fragment).commit();
            return true;
        }
        else {
            return false;
        }
    }


    //Helper method to manage naviation between fragments.
    @Override
    public void naviagateTo(Fragment fragmentToNavigateTo, boolean addToBackStack) {
        FragmentTransaction fragmentTransaction = getSupportFragmentManager().beginTransaction()
                .replace(R.id.secondaryContainer, fragmentToNavigateTo);

        fragmentTransaction.setTransitionStyle(FragmentTransaction.TRANSIT_FRAGMENT_FADE);

        //if true allow user to go back using back button
        if(addToBackStack){
            fragmentTransaction.addToBackStack(null);
        }

        fragmentTransaction.commit();
    }
}
